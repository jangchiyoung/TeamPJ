<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

	<!-- 상품테이블 리스트 -->
	<select id="getList" resultType="Product">
		select * from product
		where
		product_status = 'ing' and product_seller = (select member_id from
		member where member_status = 0 and member_id = product_seller )
		order
		by product_no limit 0,8;
	</select>

	<!-- 상품테이블 리스트 -->
	<select id="getAddList" resultType="Product"
		parameterType="java.util.Map">
		select * from product
		where product_status = 'ing' and
		product_seller = (select member_id from
		member where member_status = 0
		and member_id = product_seller )
		order
		by product_no limit
		#{StartNo},#{EndNo}
	</select>

	<!-- 내 판매내역 -->
	<select id="getMySoldList" resultType="Product"
		parameterType="Member">
		select * from product where product_seller =#{member_id}
		and product_status ='done'
	</select>
	<select id="getMySoldListCnt" resultType="int"
		parameterType="String">
		select count(*) from product where product_seller =#{id}
		and product_status ='done'
	</select>

	<select id="getMyList" resultType="Product"
		parameterType="Member">
		select * from product where product_seller =
		#{member_id} and product_status ='ing'
	</select>

	<select id="getMyListCnt" resultType="int"
		parameterType="String">
		select count(*) from product where product_seller =
		#{id} and product_status ='ing'
	</select>

	<!-- 내 구매내역 -->
	<select id="getMyBuyList" resultType="Product"
		parameterType="Member">
		select * from product where product_buyer = #{member_id}
		and product_status ='done'
	</select>

	<select id="getMyBuyListCnt" resultType="int"
		parameterType="String">
		select count(*) from product where product_buyer = #{id}
		and product_status ='done'
	</select>

	<!-- 상품번호로 조회 -->
	<select id="getOne" resultType="Product" parameterType="int">
		select *
		from product where product_no=#{product_no}
	</select>


	<!-- 즐겨찾기 횟수 -->
	<select id="getCount" resultType="int">
		select
		count(product_like) from
		product where product_no=#{product_no}
	</select>

	<!-- 상품 등록 -->
	<insert id="insert" parameterType="Product">
		insert into product
		(product_category,product_name,product_content,product_price,product_img1,product_img2,product_img3,product_seller,product_buyer)
		values
		(#{product_category},#{product_name},#{product_content},#{product_price},#{product_img1},#{product_img2},#{product_img3},#{product_seller},#{product_buyer})
	</insert>

	<!-- 상품 스정 -->
	<update id="update_product" parameterType="Product">
		update product set
		product_name=#{product_name}, product_price=#{product_price},
		product_img1=#{product_img1}, product_img2=#{product_img2},
		product_img3=#{product_img3}, product_content=#{product_content}
		where
		product_no=#{product_no}
	</update>

	<!-- 상품 상태 변경(거랜완료) -->
	<update id="update_product_done" parameterType="Product">
		update product
		set product_status=#{product_status},
		product_buyer=#{product_buyer},product_done_date=now() where
		product_no=#{product_no}
	</update>

	<!-- 증겨찾기 등록 -->
	<update id="update_like" parameterType="int">
		update product set
		product_like= product_like+1 where product_no=#{product_no}
	</update>

	<!-- 즐겨찾기 해제 -->
	<update id="delete_like" parameterType="int">
		update product set
		product_like= product_like-1 where product_no=#{product_no}
	</update>

	<!-- 즐겨찾기 목록 조회 -->
	<select id="getMyLike" resultType="Product"
		parameterType="java.util.Map">
		select * from product limit #{startNo},#{pageSize} where
		product_like= 1
	</select>

	<!-- 상품 찾기 목록 조회 -->
	<select id="getSearchList" resultType="Product"
		parameterType="String">
		select * from product
		where (product_name like #{content}
		or product_category like #{content})
		and product_status = 'ing' and
		product_seller = (select member_id from
		member where member_status = 0
		and member_id = product_seller )
		order by product_no limit 0,6;
	</select>

	<!-- 상품 찾기 목록 조회 -->
	<select id="getSearchListAdd" resultType="Product"
		parameterType="java.util.Map">
		select * from product
		where (product_name like #{content}
		or product_category like #{content})
		and product_status = 'ing' and
		product_seller = (select member_id from
		member where member_status = 0
		and member_id = product_seller )
		order
		by product_no limit
		#{StartNo},#{EndNo}
	</select>

	<!-- 상품 삭제 -->
	<delete id="delete" parameterType="int">
		delete from product where
		product_no=#{product_no}
	</delete>

	<!-- 조회수 -->
	<update id="readCount" parameterType="int">
		update product set
		product_readcount = product_readcount +1 where
		product_no=#{product_no}
	</update>
	<!-- 내 판매수 -->
	<select id="getMySellCount" resultType="int"
		parameterType="String">
		select count(*) from product where product_seller
		=#{product_seller} and product_status = 'ing'
	</select>

	<!-- 수정할 상품 불러오기 -->
	<select id="getProduct" resultType="Product" parameterType="int">
		select * from product where product_no =#{product_no}
	</select>

	<!-- 상품 신고 등록 -->
	<insert id="insert_Declaration" parameterType="Declaration">
		insert into
		declaration
		(declration_no,declration_id,declration_product_no,declration_comment)
		values
		(0,#{declration_id},#{declration_product_no},#{declration_comment})
	</insert>

	<!-- 신고 상품에 대한 회원 조회 -->
	<select id="select_Declaration" resultType="Declaration"
		parameterType="int">
		select * from declaration where
		declration_product_no=#{declration_product_no} group by declration_id
	</select>

	<!-- 어드민 관련 xml -->

	<!-- 거래 완료 상품 cnt -->
	<select id="admin_done_cnt" resultType="int">
		select count(*) from
		product where product_status = 'done'
	</select>
	<!-- 거래 중 상품 cnt -->
	<select id="admin_ing_cnt" resultType="int">
		select count(*) from
		product where product_status = 'ing'
	</select>
	<!-- 총 거래 금액 -->
	<select id="admin_total_price" resultType="int">
		select	ifnull(sum(product_price),0) from product where product_status = 'done';
	</select>
	<!-- 신고 상품 cnt -->
	<select id="admin_declaration_cnt" resultType="int">
		select count(*)
		from declaration
	</select>

	<!-- 신고 상품 내역 (상품으로 묶어서) -->
	<select id="admin_declaration_product" resultType="Declaration">
		select * from
		declaration group by declration_product_no
	</select>
	<!-- 신고 상품 내역 (상품으로 묶어서) -->
	<select id="admin_declaration" resultType="Declaration">
		select * from
		declaration ;
	</select>

</mapper>